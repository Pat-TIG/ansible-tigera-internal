---
- name: Find all EBS volumes
  amazon.aws.ec2_vol_info:
  register: vols

- name: Detach volumes the user might have created via the AWS kubernetes cloud provider
  amazon.aws.ec2_vol:
    instance: None
    id: "{{ item }}"
  loop: "{{ vols | json_query(query) | default([], true)}}"
  vars:
    query: 'volumes[?tags."kubernetes.io/cluster/{{ env_name }}"].id'

- name: Delete volumes the user might have created via the AWS kubernetes cloud provider
  amazon.aws.ec2_vol:
    state: absent
    id: "{{ item }}"
  loop: "{{ vols | json_query(query) | default([], true)}}"
  vars:
    query: 'volumes[?tags."kubernetes.io/cluster/{{ env_name }}"].id'

- name: Find all ELBs
  community.aws.ec2_elb_info:
  register: elbs

- name: Delete ELBs the user might have spun up via the AWS kubernetes cloud provider
  amazon.aws.ec2_elb_lb:
    state: absent
    name: "{{ item }}"
  loop: "{{ elbs | json_query(query) | default([], true)}}"
  vars:
    query: 'elbs[?tags."kubernetes.io/cluster/{{ env_name }}"].name'

- name: Create env specific terraform directory
  file:
    state: directory
    path: "{{ role_path }}/files/{{ env_name }}/"

- name: Copy terraform files
  copy:
    remote_src: yes
    src: "{{ role_path }}/files/terraform/"
    dest: "{{ role_path }}/files/{{ env_name }}/"

- name: Run Destroy Terraform
  community.general.terraform:
    project_path: "{{ role_path }}/files/{{ env_name }}/"
    state: absent
    backend_config:
      conn_str: "{{ postgres_url }}"
    workspace: "{{ env_name }}"
    force_init: true
    variables:
      env_name: "{{ env_name }}"
      public_ssh_key: "{{ lynx_ssh_public_key }}"
      owner: "{{ tower_user_name | default(lookup('env', 'USER')) }}"
      os: "{{ os | default('ubuntu-20.04') }}"
      os_bastion: "{{ os_bastion | default('ubuntu-20.04') }}"
      azs_count: "{{ num_azs | default('1') }}"
      control_instance_count: "{{ num_azs | default('1') }}"
      worker_instance_count: "{{ num_azs | default('2') }}"
      interface_count: "{{ interface_count | default('1') }}"
      bastion_extra_volume_size: "{{ bastion_extra_volume_size | default('0') }}"
  register: terraform_output
